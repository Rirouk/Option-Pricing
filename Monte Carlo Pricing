# -*- coding: utf-8 -*-
"""
Created on Thu Sep  4 15:30:32 2025

@author: ericl
"""

import numpy as np

rng = np.random.default_rng(12345)

x0 = 50
r = 0.02
sigma = 0.3
K = 45
N = 30      # number of days till maturity
T = N/360      # convert days to year to match the annual parameters

dt = 1/360      # 1 day
M = 10**6       # number of  sample paths
xM = np.zeros([M, N+1])     # initialize the sample path matrix
xM[:, 0] = x0   # assign x0 to the first column
# loop to fill xM
for t in range(1, N+1):
    ran = rng.standard_normal(size=M)   # increments
    xM[:,t] = xM[:,t-1]*np.exp((r - sigma ** 2 / 2) * dt + sigma * ran * np.sqrt(dt))  # see lecture 4 as well

# the call payoff vector at T, np.maximum(a,b) is element-wise comparison
vc0V = np.maximum(np.exp(-r*T)*(xM[:, N]-K), 0)     
# the mean of vc0V is our price
vc0N = np.mean(vc0V)
# the standard deviation
vc0Nsd = np.std(vc0V)
